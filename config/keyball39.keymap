#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
        Hiragana: Hiragana {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE)>;
            label = "HIRAGANA";
        };
    };

    combos {
        compatible = "zmk,combos";

        scroll {
            bindings = <&lt 5 K_PP>;
            key-positions = <17 18>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <13 12>;
        };

        tab2 {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 11>;
        };

        browsertab {
            bindings = <&kp LC(TAB)>;
            key-positions = <2 3>;
        };

        browsertab1 {
            bindings = <&kp LS(LC(TAB))>;
            key-positions = <2 1>;
        };

        browserout {
            bindings = <&kp LC(W)>;
            key-positions = <3 4>;
        };

        task {
            bindings = <&kp RC(RA(DELETE))>;
            key-positions = <26 27 28>;
        };

        underbar {
            bindings = <&kp MINUS>;
            key-positions = <16 17>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp Q             &kp W            &kp E         &kp R                  &kp T                                          &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A             &kp S            &lt 4 D       &kp F                  &kp G                                          &kp H        &kp J  &kp K      &kp L    &kp ENTER
&mt LEFT_SHIFT Z  &kp X            &kp C         &kp V                  &kp B                                          &kp N        &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&kp LCTRL         &kp EXCLAMATION  &kp QUESTION  &lt 3 INTERNATIONAL_4  &lt 1 LG(PERIOD)  &lt 5 ESCAPE  &kp BACKSPACE  &lt 2 SPACE                             &kp LEFT_BRACKET
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
&none   &none   &kp F3    &kp UP_ARROW  &kp F4                       &kp MINUS  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PLUS
&none   &none   &kp LEFT  &kp DOWN      &kp RIGHT                    &kp SLASH  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PERCENT
&none   &none   &kp END   &kp HOME      &none                        &kp N0     &kp N7        &kp N8        &kp N9        &kp EQUAL
&trans  &trans  &trans    &trans        &trans     &trans  &kp LEFT  &kp RIGHT                                            &kp PERIOD
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN    &kp LG(LC(LEFT))  &kp LG(LC(RIGHT))  &kp LG(T)                    &kp CARET       &kp AMPERSAND      &kp LEFT       &kp RIGHT          &kp RIGHT_PARENTHESIS
&kp LC(A)        &kp LS(LG(S))  &mo 4             &kp LC(F)          &kp LG(TAB)                  &kp MINUS       &kp RIGHT_BRACKET  &kp BACKSLASH  &kp RIGHT_BRACKET  &kp SQT
&trans           &trans         &kp LC(C)         &kp LC(V)          &trans                       &kp UNDERSCORE  &kp PLUS           &trans         &trans             &kp NON_US_BACKSLASH
&trans           &trans         &trans            &trans             &trans       &trans  &trans  &trans                                                               &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&kp F1  &kp F2   &kp F3   &kp F4   &none                   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&kp F5  &kp F6   &kp F7   &kp F8   &none                   &none         &none         &none         &none         &bt BT_CLR_ALL
&kp F9  &kp F10  &kp F11  &kp F12  &none                   &none         &none         &none         &none         &none
&trans  &trans   &trans   &trans   &trans  &trans  &trans  &trans                                                  &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&kp N1          &kp N2          &kp N3        &kp N4     &kp N5                       &kp N6         &kp N7     &kp N8    &kp N9     &kp N0
&kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &none                        &kp PAGE_UP    &mkp LCLK  &mkp MB3  &mkp RCLK  &mkp MCLK
&none           &none           &none         &mkp LCLK  &mkp RCLK                    &kp PAGE_DOWN  &mkp MB1   &mkp MB4  &mkp MB5   &none
&none           &trans          &trans        &mkp MCLK  &mkp MB4   &mkp MB5  &trans  &none                                          &none
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &bootloader                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans                          &trans
            >;
        };
    };
};
